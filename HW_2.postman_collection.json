{
	"info": {
		"_postman_id": "f7261b39-6a44-45ad-a1bc-67613451ff40",
		"name": "HW_2",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Req_1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Body is correct\", function () {\r",
							"    pm.response.to.have.body(\"This is the first responce from server!\");\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}:{{port}}/first",
					"host": [
						"{{url}}"
					],
					"port": "{{port}}",
					"path": [
						"first"
					]
				}
			},
			"response": []
		},
		{
			"name": "Req_2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let resp = pm.response.json();\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"name s request\", function () {\r",
							"    pm.expect(resp.name).to.eql(\"Olga\");\r",
							"});\r",
							"\r",
							"pm.test(\"age s request\", function () {\r",
							"    pm.expect(resp.age).to.eql('43');\r",
							"});\r",
							"\r",
							"pm.test(\"salary s request\", function () {\r",
							"    pm.expect(resp.salary).to.eql(1000);\r",
							"});\r",
							"\r",
							"\r",
							"let req_data = request.data ;\r",
							"\r",
							"pm.test(\"name s request\", function () {\r",
							"    pm.expect(resp.name).to.eql(req_data.name);\r",
							"});\r",
							"\r",
							"pm.test(\"age s request\", function () {\r",
							"    pm.expect(resp.age).to.eql(req_data.age);\r",
							"});\r",
							"\r",
							"pm.test(\"salary s request\", function () {\r",
							"    pm.expect(resp.salary).to.eql(+req_data.salary);\r",
							"});\r",
							"\r",
							"console.log (resp.family)\r",
							"\r",
							"\r",
							"pm.test(\"salary s request\", function () {\r",
							"    let salary2 = req_data.salary*4 ;\r",
							"    console.log (salary2) ;\r",
							"    console.log (resp.family.u_salary_1_5_year) ;\r",
							"    pm.expect(resp.family.u_salary_1_5_year).to.eql(req_data.salary*4);\r",
							"});\r",
							"\r",
							"\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "name",
							"value": "Olga",
							"type": "text"
						},
						{
							"key": "age",
							"value": "43",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "1000",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{url}}:{{port}}/user_info_3",
					"host": [
						"{{url}}"
					],
					"port": "{{port}}",
					"path": [
						"user_info_3"
					]
				}
			},
			"response": []
		},
		{
			"name": "Req_3",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let resp = pm.response.json();\r",
							"\r",
							"let req_data = pm.request.url.query.toObject();\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"name s request\", function () {\r",
							"    pm.expect(resp.name).to.eql(req_data.name);\r",
							"});\r",
							"\r",
							"pm.test(\"age s request\", function () {\r",
							"    pm.expect(resp.age).to.eql(req_data.age);\r",
							"});\r",
							"\r",
							"pm.test(\"salary s request\", function () {\r",
							"    pm.expect(resp.salary).to.eql(+req_data.salary);\r",
							"});\r",
							"\r",
							"console.log (resp.family)\r",
							"\r",
							"\r",
							"pm.test(\"dog has name\", function () {\r",
							"    pm.expect(resp.family.pets.dog).to.have.property(\"name\");\r",
							"});\r",
							"\r",
							"pm.test(\"dog has age\", function () {\r",
							"    pm.expect(resp.family.pets.dog).to.have.property(\"age\");\r",
							"});\r",
							"\r",
							"pm.test(\"name s request\", function () {\r",
							"    pm.expect(resp.family.pets.dog.name).to.eql(\"Luky\");\r",
							"});\r",
							"\r",
							"pm.test(\"age s request\", function () {\r",
							"    pm.expect(resp.family.pets.dog.age).to.eql(4);\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": []
				},
				"url": {
					"raw": "{{url}}:{{port}}/object_info_3?name=Olga&age=43&salary=1000",
					"host": [
						"{{url}}"
					],
					"port": "{{port}}",
					"path": [
						"object_info_3"
					],
					"query": [
						{
							"key": "name",
							"value": "Olga"
						},
						{
							"key": "age",
							"value": "43"
						},
						{
							"key": "salary",
							"value": "1000"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Req_4",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"let resp = pm.response.json();\r",
							"\r",
							"let req_data = pm.request.url.query.toObject();\r",
							"\r",
							"pm.test(\"name s request\", function () {\r",
							"    pm.expect(resp.name).to.eql(req_data.name);\r",
							"});\r",
							"\r",
							"pm.test(\"age s request\", function () {\r",
							"    pm.expect(resp.age).to.eql(+req_data.age);\r",
							"});\r",
							"\r",
							"\r",
							"console.log (req_data.salary);\r",
							"\r",
							"console.log (resp.salary);\r",
							"\r",
							"console.log (resp.salary[0]);\r",
							"\r",
							"console.log (resp.salary[1]);\r",
							"\r",
							"console.log (resp.salary[2]);\r",
							"\r",
							"pm.test(\"0salary s request\", function () {\r",
							"    pm.expect(resp.salary[0]).to.eql(+req_data.salary);\r",
							"});\r",
							"\r",
							"pm.test(\"1salary s request\", function () {\r",
							"    pm.expect(resp.salary[1]).to.eql(String(+req_data.salary*2));\r",
							"});\r",
							"\r",
							"pm.test(\"2salary s request\", function () {\r",
							"    pm.expect(resp.salary[2]).to.eql(String(+req_data.salary * 3));\r",
							"});\r",
							"\r",
							"\r",
							"\r",
							"pm.environment.set(\"name\", req_data.name);\r",
							"\r",
							"pm.environment.set(\"age\", req_data.age);\r",
							"\r",
							"pm.environment.set(\"salary\", req_data.salary);\r",
							"\r",
							"\r",
							"for (let i = 0; i < 3; i++) { \r",
							"  console.log(\"element\", resp.salary[i]);\r",
							"}\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}:{{port}}/object_info_4?name=Olga&age=43&salary=1000",
					"host": [
						"{{url}}"
					],
					"port": "{{port}}",
					"path": [
						"object_info_4"
					],
					"query": [
						{
							"key": "name",
							"value": "Olga"
						},
						{
							"key": "age",
							"value": "43"
						},
						{
							"key": "salary",
							"value": "1000"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Req_5",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"let resp = pm.response.json();\r",
							"\r",
							"let req_data = request.data ;\r",
							"\r",
							"pm.test(\"resp has start salary\", function () {\r",
							"    pm.expect(resp).to.have.property(\"start_qa_salary\");\r",
							"});\r",
							"\r",
							"pm.test(\"resp has qa_salary_after_6_months\", function () {\r",
							"    pm.expect(resp).to.have.property(\"qa_salary_after_6_months\");\r",
							"});\r",
							"\r",
							"pm.test(\"resp has qa_salary_after_12_months\", function () {\r",
							"    pm.expect(resp).to.have.property(\"qa_salary_after_12_months\");\r",
							"});\r",
							"\r",
							"pm.test(\"resp has qa_salary_after_1.5_year\", function () {\r",
							"    pm.expect(resp).to.have.property(\"qa_salary_after_1.5_year\");\r",
							"});\r",
							"\r",
							"pm.test(\"resp has qa_salary_after_3.5_years\", function () {\r",
							"    pm.expect(resp).to.have.property(\"qa_salary_after_3.5_years\");\r",
							"});\r",
							"\r",
							"pm.test(\"resp has person\", function () {\r",
							"    pm.expect(resp).to.have.property(\"person\");\r",
							"});\r",
							"\r",
							"pm.test(\"start_qa_salary s request\", function () {\r",
							"    pm.expect(resp.start_qa_salary).to.eql(+req_data.salary);\r",
							"});\r",
							"\r",
							"pm.test(\"qa_salary_after_6_months s request\", function () {\r",
							"    pm.expect(resp.qa_salary_after_6_months).to.eql(+req_data.salary*2);\r",
							"});\r",
							"\r",
							"pm.test(\"qa_salary_after_12_months s request\", function () {\r",
							"    pm.expect(resp.qa_salary_after_12_months).to.eql(+req_data.salary*2.7);\r",
							"});\r",
							"\r",
							"pm.test(\"qa_salary_after_1.5_year s request\", function () {\r",
							"    pm.expect(resp[\"qa_salary_after_1.5_year\"]).to.eql(+req_data.salary*3.3);\r",
							"});\r",
							"\r",
							"pm.test(\"qa_salary_after_3.5_years s request\", function () {\r",
							"    pm.expect(resp[\"qa_salary_after_3.5_years\"]).to.eql(+req_data.salary*3.8);\r",
							"});\r",
							"\r",
							"pm.test(\"person u_name s request\", function () {\r",
							"    pm.expect(resp.person.u_name[1]).to.eql(+req_data.salary);\r",
							"});\r",
							"\r",
							"pm.test(\"u_age s request\", function () {\r",
							"    pm.expect(resp.person.u_age).to.eql(+req_data.age);\r",
							"});\r",
							"\r",
							"pm.test(\"u_salary_5_years s request\", function () {\r",
							"    pm.expect(resp.person.u_salary_5_years).to.eql(+req_data.salary*4.2);\r",
							"});\r",
							"\r",
							"for (key in resp.person) {\r",
							"  if (resp.person.hasOwnProperty(key)) {\r",
							"    console.log(\"Ключ = \" + key);\r",
							"    console.log(\"Значение = \" + resp.person[key]);\r",
							"  } \r",
							"}\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "name",
							"value": "{{name}}",
							"type": "text"
						},
						{
							"key": "age",
							"value": "{{age}}",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "{{salary}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{url}}:{{port}}/user_info_2",
					"host": [
						"{{url}}"
					],
					"port": "{{port}}",
					"path": [
						"user_info_2"
					]
				}
			},
			"response": []
		}
	]
}